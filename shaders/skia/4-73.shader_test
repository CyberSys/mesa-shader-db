[require]
GLSL >= 1.40

[fragment shader]
#version 140

out vec4 sk_FragColor;
uniform vec4 uColor_Stage0;
noperspective in vec3 vDashParam_Stage0;
noperspective in vec2 vCircleParams_Stage0;
void main() {
    vec4 outputColor_Stage0;
    vec4 outputCoverage_Stage0;
    {
        outputColor_Stage0 = uColor_Stage0;
        float xShifted = vDashParam_Stage0.x - floor(vDashParam_Stage0.x / vDashParam_Stage0.z) * vDashParam_Stage0.z;
        vec2 fragPosShifted = vec2(xShifted, vDashParam_Stage0.y);
        vec2 center = vec2(vCircleParams_Stage0.y, 0.0);
        float dist = length(center - fragPosShifted);
        float diff = dist - vCircleParams_Stage0.x;
        diff = 1.0 - diff;
        float alpha = clamp(diff, 0.0, 1.0);
        outputCoverage_Stage0 = vec4(alpha);
    }
    {
        sk_FragColor = outputColor_Stage0 * outputCoverage_Stage0;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
in vec2 inPosition;
in vec3 inDashParams;
in vec2 inCircleParams;
noperspective out vec3 vDashParam_Stage0;
noperspective out vec2 vCircleParams_Stage0;
void main() {
    vDashParam_Stage0 = inDashParams;
    vCircleParams_Stage0 = inCircleParams;
    vec2 pos2 = inPosition;
    gl_Position = vec4(pos2.x, pos2.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

