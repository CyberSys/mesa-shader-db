[require]
GLSL >= 1.40

[fragment shader]
#version 140

out vec4 sk_FragColor;
noperspective in vec4 vinCircleEdge_Stage0;
noperspective in vec3 vinClipPlane_Stage0;
noperspective in vec3 vinIsectPlane_Stage0;
noperspective in vec4 vinRoundCapCenters_Stage0;
flat in float vcapRadius_Stage0;
noperspective in vec4 vinColor_Stage0;
void main() {
    vec4 outputColor_Stage0;
    vec4 outputCoverage_Stage0;
    {
        vec4 circleEdge;
        circleEdge = vinCircleEdge_Stage0;
        vec3 clipPlane;
        clipPlane = vinClipPlane_Stage0;
        vec3 isectPlane;
        isectPlane = vinIsectPlane_Stage0;
        vec4 roundCapCenters;
        roundCapCenters = vinRoundCapCenters_Stage0;
        outputColor_Stage0 = vinColor_Stage0;
        float d = length(circleEdge.xy);
        float distanceToOuterEdge = circleEdge.z * (1.0 - d);
        float edgeAlpha = clamp(distanceToOuterEdge, 0.0, 1.0);
        float distanceToInnerEdge = circleEdge.z * (d - circleEdge.w);
        float innerAlpha = clamp(distanceToInnerEdge, 0.0, 1.0);
        edgeAlpha *= innerAlpha;
        float clip = clamp(circleEdge.z * dot(circleEdge.xy, clipPlane.xy) + clipPlane.z, 0.0, 1.0);
        clip *= clamp(circleEdge.z * dot(circleEdge.xy, isectPlane.xy) + isectPlane.z, 0.0, 1.0);
        edgeAlpha *= clip;
        float dcap1 = circleEdge.z * (vcapRadius_Stage0 - length(circleEdge.xy - roundCapCenters.xy));
        float dcap2 = circleEdge.z * (vcapRadius_Stage0 - length(circleEdge.xy - roundCapCenters.zw));
        float capAlpha = (1.0 - clip) * (max(dcap1, 0.0) + max(dcap2, 0.0));
        edgeAlpha = min(edgeAlpha + capAlpha, 1.0);
        outputCoverage_Stage0 = vec4(edgeAlpha);
    }
    {
        sk_FragColor = outputColor_Stage0 * outputCoverage_Stage0;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
in vec2 inPosition;
in vec4 inColor;
in vec4 inCircleEdge;
in vec3 inClipPlane;
in vec3 inIsectPlane;
in vec4 inRoundCapCenters;
noperspective out vec4 vinCircleEdge_Stage0;
noperspective out vec3 vinClipPlane_Stage0;
noperspective out vec3 vinIsectPlane_Stage0;
noperspective out vec4 vinRoundCapCenters_Stage0;
flat out float vcapRadius_Stage0;
noperspective out vec4 vinColor_Stage0;
void main() {
    vinCircleEdge_Stage0 = inCircleEdge;
    vinClipPlane_Stage0 = inClipPlane;
    vinIsectPlane_Stage0 = inIsectPlane;
    vinRoundCapCenters_Stage0 = inRoundCapCenters;
    vcapRadius_Stage0 = (1.0 - inCircleEdge.w) / 2.0;
    vinColor_Stage0 = inColor;
    vec2 pos2 = inPosition;
    gl_Position = vec4(pos2.x, pos2.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

