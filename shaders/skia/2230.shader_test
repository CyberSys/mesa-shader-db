[require]
GLSL >= 1.40

[fragment shader]
#version 140

#extension GL_ARB_fragment_coord_conventions : require
layout(origin_upper_left) in vec4 gl_FragCoord;
out vec4 sk_FragColor;
uniform vec4 uColor_Stage0;
uniform vec4 uinnerRect_Stage1_c0_c0;
uniform vec2 uradiusPlusHalf_Stage1_c0_c0;
vec4 CircularRRect_Stage1_c0_c0(vec4 _input) {
    vec4 _output;
    vec2 dxy0 = uinnerRect_Stage1_c0_c0.xy - gl_FragCoord.xy;
    vec2 dxy1 = gl_FragCoord.xy - uinnerRect_Stage1_c0_c0.zw;
    vec2 dxy = max(max(dxy0, dxy1), 0.0);
    float alpha = clamp(uradiusPlusHalf_Stage1_c0_c0.x - length(dxy), 0.0, 1.0);
    alpha = 1.0 - alpha;
    _output = _input * alpha;
    return _output;
}
void main() {
    vec4 output_Stage1;
    {
        output_Stage1 = CircularRRect_Stage1_c0_c0(vec4(1.0));
    }
    {
        sk_FragColor = output_Stage1;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uViewM_Stage0;
in vec2 inPosition;
in vec2 inLocalCoord;
void main() {
    vec2 pos2 = (uViewM_Stage0 * vec3(inPosition, 1.0)).xy;
    gl_Position = vec4(pos2.x, pos2.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

