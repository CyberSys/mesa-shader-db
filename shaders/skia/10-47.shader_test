[require]
GLSL >= 1.40

[fragment shader]
#version 140

out vec4 sk_FragColor;
uniform mat4 um_Stage2_c1_c0;
uniform vec4 uv_Stage2_c1_c0;
uniform float uDstTF_Stage2_c2_c0[7];
uniform sampler2D uTextureSampler_0_Stage1;
noperspective in vec2 vTransformedCoords_0_Stage0;
flat in vec4 vcolor_Stage0;
vec4 TextureEffect_Stage1_c0_c0(vec4 _input) {
    vec4 _output;
    _output = texture(uTextureSampler_0_Stage1, vTransformedCoords_0_Stage0) * _input;
    return _output;
}
vec4 ColorMatrixFragmentProcessor_Stage2_c1_c0(vec4 _input) {
    vec4 _output;
    vec4 inputColor = _input;
    {
        float nonZeroAlpha = max(inputColor.w, 9.9999997473787516e-05);
        inputColor = vec4(inputColor.xyz / nonZeroAlpha, inputColor.w);
    }
    _output = um_Stage2_c1_c0 * inputColor + uv_Stage2_c1_c0;
    {
        _output = clamp(_output, 0.0, 1.0);
    }
    {
        _output.xyz *= _output.w;
    }
    return _output;
}
float dst_tf_Stage2_c2_c0(float x) {
    float G = uDstTF_Stage2_c2_c0[0];
    float A = uDstTF_Stage2_c2_c0[1];
    float B = uDstTF_Stage2_c2_c0[2];
    float C = uDstTF_Stage2_c2_c0[3];
    float D = uDstTF_Stage2_c2_c0[4];
    float E = uDstTF_Stage2_c2_c0[5];
    float F = uDstTF_Stage2_c2_c0[6];
    float s = sign(x);
    x = abs(x);
    x = x < D ? C * x + F : pow(A * x + B, G) + E;
    return s * x;
}
vec4 color_xform_Stage2_c2_c0(vec4 color) {
    float nonZeroAlpha = max(color.w, 9.9999997473787516e-05);
    color = vec4(color.xyz / nonZeroAlpha, nonZeroAlpha);
    color.x = dst_tf_Stage2_c2_c0(color.x);
    color.y = dst_tf_Stage2_c2_c0(color.y);
    color.z = dst_tf_Stage2_c2_c0(color.z);
    color.xyz *= color.w;
    return color;
}
vec4 ColorSpaceXform_Stage2_c2_c0(vec4 _input) {
    vec4 _output;
    _output = color_xform_Stage2_c2_c0(_input);
    return _output;
}
void main() {
    vec4 output_Stage1;
    {
        output_Stage1 = TextureEffect_Stage1_c0_c0(vec4(1.0, 1.0, 1.0, 1.0));
    }
    vec4 output_Stage2;
    {
        output_Stage2 = ColorSpaceXform_Stage2_c2_c0(ColorMatrixFragmentProcessor_Stage2_c1_c0(output_Stage1));
    }
    {
        sk_FragColor = output_Stage2;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uCoordTransformMatrix_0_Stage0;
in vec2 position;
in vec4 color;
in vec2 localCoord;
noperspective out vec2 vTransformedCoords_0_Stage0;
flat out vec4 vcolor_Stage0;
void main() {
    vTransformedCoords_0_Stage0 = (uCoordTransformMatrix_0_Stage0 * vec3(localCoord, 1.0)).xy;
    vcolor_Stage0 = color;
    gl_Position = vec4(position.x, position.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

