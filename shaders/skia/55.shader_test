[require]
GLSL >= 1.40

[fragment shader]
#version 140

out vec4 sk_FragColor;
uniform vec4 usubset_Stage1_c0_c0;
uniform vec4 uclamp_Stage1_c0_c0;
uniform sampler2DRect uTextureSampler_0_Stage1;
noperspective in vec2 vTransformedCoords_0_Stage0;
flat in vec4 vcolor_Stage0;
vec4 TextureEffect_Stage1_c0_c0(vec4 _input) {
    vec4 _output;
    vec2 inCoord = vTransformedCoords_0_Stage0;
    vec2 subsetCoord;
    {
        float w = usubset_Stage1_c0_c0.z - usubset_Stage1_c0_c0.x;
        float w2 = 2.0 * w;
        float m = mod(inCoord.x - usubset_Stage1_c0_c0.x, w2);
        subsetCoord.x = mix(m, w2 - m, step(w, m)) + usubset_Stage1_c0_c0.x;
    }
    subsetCoord.y = mod(inCoord.y - usubset_Stage1_c0_c0.y, usubset_Stage1_c0_c0.w - usubset_Stage1_c0_c0.y) + usubset_Stage1_c0_c0.y;
    vec2 clampedCoord;
    clampedCoord.x = clamp(subsetCoord.x, uclamp_Stage1_c0_c0.x, uclamp_Stage1_c0_c0.z);
    clampedCoord.y = clamp(subsetCoord.y, uclamp_Stage1_c0_c0.y, uclamp_Stage1_c0_c0.w);
    vec4 textureColor = texture(uTextureSampler_0_Stage1, clampedCoord);
    _output = _input * textureColor;
    return _output;
}
void main() {
    vec4 output_Stage1;
    {
        output_Stage1 = TextureEffect_Stage1_c0_c0(vec4(1.0, 1.0, 1.0, 1.0));
    }
    {
        sk_FragColor = output_Stage1;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uCoordTransformMatrix_0_Stage0;
in vec2 position;
in vec4 color;
in vec2 localCoord;
noperspective out vec2 vTransformedCoords_0_Stage0;
flat out vec4 vcolor_Stage0;
void main() {
    vTransformedCoords_0_Stage0 = (uCoordTransformMatrix_0_Stage0 * vec3(localCoord, 1.0)).xy;
    vcolor_Stage0 = color;
    gl_Position = vec4(position.x, position.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

