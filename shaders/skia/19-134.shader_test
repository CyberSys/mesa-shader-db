[require]
GLSL >= 1.40

[fragment shader]
#version 140

#extension GL_ARB_fragment_coord_conventions : require
layout(origin_upper_left) in vec4 gl_FragCoord;
out vec4 sk_FragColor;
uniform vec4 uCoordTransformMatrix_0_Stage0;
uniform vec4 uinnerRect_Stage2_c1_c0;
uniform vec2 uradiusPlusHalf_Stage2_c1_c0;
uniform vec4 uinnerRect_Stage2_c2_c0;
uniform vec2 uradiusPlusHalf_Stage2_c2_c0;
uniform sampler2D uTextureSampler_0_Stage1;
flat in vec4 vcolor_Stage0;
vec4 TextureEffect_Stage1_c0_c0(vec4 _input, vec2 _coords) {
    _coords = _coords * uCoordTransformMatrix_0_Stage0.xz + uCoordTransformMatrix_0_Stage0.yw;
    vec4 _output;
    _output = texture(uTextureSampler_0_Stage1, _coords) * _input;
    return _output;
}
vec4 CircularRRect_Stage2_c1_c0(vec4 _input) {
    vec4 _output;
    vec2 dxy0 = uinnerRect_Stage2_c1_c0.xy - gl_FragCoord.xy;
    vec2 dxy1 = gl_FragCoord.xy - uinnerRect_Stage2_c1_c0.zw;
    vec2 dxy = max(max(dxy0, dxy1), 0.0);
    float alpha = clamp(uradiusPlusHalf_Stage2_c1_c0.x - length(dxy), 0.0, 1.0);
    alpha = 1.0 - alpha;
    _output = _input * alpha;
    return _output;
}
vec4 CircularRRect_Stage2_c2_c0(vec4 _input) {
    vec4 _output;
    vec2 dxy0 = uinnerRect_Stage2_c2_c0.xy - gl_FragCoord.xy;
    vec2 dxy1 = gl_FragCoord.xy - uinnerRect_Stage2_c2_c0.zw;
    vec2 dxy = max(max(dxy0, dxy1), 0.0);
    float alpha = clamp(uradiusPlusHalf_Stage2_c2_c0.x - length(dxy), 0.0, 1.0);
    alpha = 1.0 - alpha;
    _output = _input * alpha;
    return _output;
}
void main() {
    vec4 outputColor_Stage0;
    {
        outputColor_Stage0 = vcolor_Stage0;
    }
    vec4 output_Stage1;
    {
        output_Stage1 = TextureEffect_Stage1_c0_c0(vec4(1.0), gl_FragCoord.xy);
    }
    vec4 output_Stage2;
    {
        output_Stage2 = CircularRRect_Stage2_c2_c0(CircularRRect_Stage2_c1_c0(output_Stage1));
    }
    {
        sk_FragColor = outputColor_Stage0 * output_Stage2;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
in vec2 position;
in vec4 color;
flat out vec4 vcolor_Stage0;
void main() {
    vcolor_Stage0 = color;
    gl_Position = vec4(position.x, position.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

