[require]
GLSL >= 1.40

[fragment shader]
#version 140

out vec4 sk_FragColor;
uniform vec4 uColor_Stage0;
uniform vec4 ucolor_Stage1;
uniform vec3 uedges_Stage2[4];
uniform vec4 uleftBorderColor_Stage3_c0_c0;
uniform vec4 urightBorderColor_Stage3_c0_c0;
uniform vec4 uscale0_1_Stage3_c0_c0_c1_c0;
uniform vec4 uscale2_3_Stage3_c0_c0_c1_c0;
uniform vec4 uscale4_5_Stage3_c0_c0_c1_c0;
uniform vec4 uscale6_7_Stage3_c0_c0_c1_c0;
uniform vec4 uscale8_9_Stage3_c0_c0_c1_c0;
uniform vec4 ubias0_1_Stage3_c0_c0_c1_c0;
uniform vec4 ubias2_3_Stage3_c0_c0_c1_c0;
uniform vec4 ubias4_5_Stage3_c0_c0_c1_c0;
uniform vec4 ubias6_7_Stage3_c0_c0_c1_c0;
uniform vec4 ubias8_9_Stage3_c0_c0_c1_c0;
uniform vec4 uthresholds1_7_Stage3_c0_c0_c1_c0;
uniform vec4 uthresholds9_13_Stage3_c0_c0_c1_c0;
uniform vec2 ufocalParams_Stage4_c1_c0_c0_c0;
uniform vec4 uscale0_1_Stage4_c1_c0_c1_c0;
uniform vec4 uscale2_3_Stage4_c1_c0_c1_c0;
uniform vec4 uscale4_5_Stage4_c1_c0_c1_c0;
uniform vec4 uscale6_7_Stage4_c1_c0_c1_c0;
uniform vec4 ubias0_1_Stage4_c1_c0_c1_c0;
uniform vec4 ubias2_3_Stage4_c1_c0_c1_c0;
uniform vec4 ubias4_5_Stage4_c1_c0_c1_c0;
uniform vec4 ubias6_7_Stage4_c1_c0_c1_c0;
uniform vec4 uthresholds1_7_Stage4_c1_c0_c1_c0;
uniform vec4 uthresholds9_13_Stage4_c1_c0_c1_c0;
noperspective in vec2 vTransformedCoords_0_Stage0;
noperspective in vec2 vTransformedCoords_1_Stage0;
vec4 RadialGradientLayout_Stage3_c0_c0_c0_c0(vec4 _input) {
    vec4 _output;
    float t = length(vTransformedCoords_0_Stage0);
    _output = vec4(t, 1.0, 0.0, 0.0);
    return _output;
}
vec4 UnrolledBinaryGradientColorizer_Stage3_c0_c0_c1_c0(vec4 _input) {
    vec4 _output;
    float t = _input.x;
    vec4 scale, bias;
    if (t < uthresholds1_7_Stage3_c0_c0_c1_c0.w) {
        if (t < uthresholds1_7_Stage3_c0_c0_c1_c0.y) {
            if (t < uthresholds1_7_Stage3_c0_c0_c1_c0.x) {
                scale = uscale0_1_Stage3_c0_c0_c1_c0;
                bias = ubias0_1_Stage3_c0_c0_c1_c0;
            } else {
                scale = uscale2_3_Stage3_c0_c0_c1_c0;
                bias = ubias2_3_Stage3_c0_c0_c1_c0;
            }
        } else {
            if (t < uthresholds1_7_Stage3_c0_c0_c1_c0.z) {
                scale = uscale4_5_Stage3_c0_c0_c1_c0;
                bias = ubias4_5_Stage3_c0_c0_c1_c0;
            } else {
                scale = uscale6_7_Stage3_c0_c0_c1_c0;
                bias = ubias6_7_Stage3_c0_c0_c1_c0;
            }
        }
    } else {
        {
            {
                scale = uscale8_9_Stage3_c0_c0_c1_c0;
                bias = ubias8_9_Stage3_c0_c0_c1_c0;
            }
        }
    }
    _output = t * scale + bias;
    return _output;
}
vec4 ClampedGradientEffect_Stage3_c0_c0(vec4 _input) {
    vec4 _output;
    vec4 t = RadialGradientLayout_Stage3_c0_c0_c0_c0(vec4(1.0));
    if (t.x < 0.0) {
        _output = uleftBorderColor_Stage3_c0_c0;
    } else if (t.x > 1.0) {
        _output = urightBorderColor_Stage3_c0_c0;
    } else {
        _output = UnrolledBinaryGradientColorizer_Stage3_c0_c0_c1_c0(t);
    }
    {
        _output.xyz *= _output.w;
    }
    return _output;
}
vec4 TwoPointConicalGradientLayout_Stage4_c1_c0_c0_c0(vec4 _input) {
    vec4 _output;
    vec2 p = vTransformedCoords_1_Stage0;
    float t = -1.0;
    {
        {
            float invR1 = ufocalParams_Stage4_c1_c0_c0_c0.x;
            float x_t = -1.0;
            {
                x_t = length(p) - p.x * invR1;
            }
            {
                {
                    t = x_t;
                }
            }
            {
                t = 1.0 - t;
            }
        }
    }
    _output = vec4(t, 1.0, 0.0, 0.0);
    return _output;
}
vec4 UnrolledBinaryGradientColorizer_Stage4_c1_c0_c1_c0(vec4 _input) {
    vec4 _output;
    float t = _input.x;
    vec4 scale, bias;
    {
        if (t < uthresholds1_7_Stage4_c1_c0_c1_c0.y) {
            if (t < uthresholds1_7_Stage4_c1_c0_c1_c0.x) {
                scale = uscale0_1_Stage4_c1_c0_c1_c0;
                bias = ubias0_1_Stage4_c1_c0_c1_c0;
            } else {
                scale = uscale2_3_Stage4_c1_c0_c1_c0;
                bias = ubias2_3_Stage4_c1_c0_c1_c0;
            }
        } else {
            if (t < uthresholds1_7_Stage4_c1_c0_c1_c0.z) {
                scale = uscale4_5_Stage4_c1_c0_c1_c0;
                bias = ubias4_5_Stage4_c1_c0_c1_c0;
            } else {
                scale = uscale6_7_Stage4_c1_c0_c1_c0;
                bias = ubias6_7_Stage4_c1_c0_c1_c0;
            }
        }
    }
    _output = t * scale + bias;
    return _output;
}
vec4 TiledGradientEffect_Stage4_c1_c0(vec4 _input) {
    vec4 _output;
    vec4 t = TwoPointConicalGradientLayout_Stage4_c1_c0_c0_c0(vec4(1.0));
    if (t.y < 0.0) {
        _output = vec4(0.0);
    } else {
        {
            float t_1 = t.x - 1.0;
            float tiled_t = (t_1 - 2.0 * floor(t_1 * 0.5)) - 1.0;
            t.x = abs(tiled_t);
        }
        _output = UnrolledBinaryGradientColorizer_Stage4_c1_c0_c1_c0(t);
    }
    {
        _output.xyz *= _output.w;
    }
    return _output;
}
vec4 blend_src_in(vec4 src, vec4 dst) {
    return src * dst.w;
}
vec4 blend_dst_in(vec4 src, vec4 dst) {
    return blend_src_in(dst, src);
}
void main() {
    vec4 output_Stage1;
    {
        {
            output_Stage1 = ucolor_Stage1;
        }
    }
    vec4 output_Stage2;
    {
        float alpha = 1.0;
        float edge;
        edge = dot(uedges_Stage2[0], vec3(gl_FragCoord.x, gl_FragCoord.y, 1.0));
        edge = edge >= 0.5 ? 1.0 : 0.0;
        alpha *= edge;
        edge = dot(uedges_Stage2[1], vec3(gl_FragCoord.x, gl_FragCoord.y, 1.0));
        edge = edge >= 0.5 ? 1.0 : 0.0;
        alpha *= edge;
        edge = dot(uedges_Stage2[2], vec3(gl_FragCoord.x, gl_FragCoord.y, 1.0));
        edge = edge >= 0.5 ? 1.0 : 0.0;
        alpha *= edge;
        edge = dot(uedges_Stage2[3], vec3(gl_FragCoord.x, gl_FragCoord.y, 1.0));
        edge = edge >= 0.5 ? 1.0 : 0.0;
        alpha *= edge;
        alpha = 1.0 - alpha;
        output_Stage2 = output_Stage1 * alpha;
    }
    vec4 output_Stage3;
    {
        output_Stage3 = blend_dst_in(output_Stage2, ClampedGradientEffect_Stage3_c0_c0(vec4(1.0)));
    }
    vec4 output_Stage4;
    {
        output_Stage4 = blend_dst_in(output_Stage3, TiledGradientEffect_Stage4_c1_c0(vec4(1.0)));
    }
    {
        sk_FragColor = output_Stage4;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uViewM_Stage0;
uniform mat3 uCoordTransformMatrix_0_Stage0;
uniform mat3 uCoordTransformMatrix_1_Stage0;
in vec2 position;
noperspective out vec2 vTransformedCoords_0_Stage0;
noperspective out vec2 vTransformedCoords_1_Stage0;
void main() {
    vec2 pos2 = (uViewM_Stage0 * vec3(position, 1.0)).xy;
    vTransformedCoords_0_Stage0 = (uCoordTransformMatrix_0_Stage0 * vec3(position, 1.0)).xy;
    vTransformedCoords_1_Stage0 = (uCoordTransformMatrix_1_Stage0 * vec3(position, 1.0)).xy;
    gl_Position = vec4(pos2.x, pos2.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

