[require]
GLSL >= 1.40

[fragment shader]
#version 140

out vec4 sk_FragColor;
uniform float ucontrast_Stage2;
uniform sampler2D uTextureSampler_0_Stage1;
noperspective in vec2 vTransformedCoords_0_Stage0;
flat in vec4 vcolor_Stage0;
vec4 TextureEffect_Stage1_c0_c0(vec4 _input) {
    vec4 _output;
    _output = texture(uTextureSampler_0_Stage1, vTransformedCoords_0_Stage0) * _input;
    return _output;
}
void main() {
    vec4 output_Stage1;
    {
        output_Stage1 = TextureEffect_Stage1_c0_c0(vec4(1.0, 1.0, 1.0, 1.0));
    }
    vec4 output_Stage2;
    {
        vec4 color = output_Stage1;
        float nonZeroAlpha = max(color.w, 9.9999997473787516e-05);
        color = vec4(color.xyz / nonZeroAlpha, nonZeroAlpha);
        color.xyz = color.xyz * color.xyz;
        float luma = dot(color, vec4(0.2125999927520752, 0.71520000696182251, 0.072200000286102295, 0.0));
        color = vec4(luma, luma, luma, 0.0);
        if (ucontrast_Stage2 != 0.0) {
            float m = (1.0 + ucontrast_Stage2) / (1.0 - ucontrast_Stage2);
            float off = -0.5 * m + 0.5;
            color = m * color + off;
        }
        color = clamp(color, 0.0, 1.0);
        color.xyz = sqrt(color.xyz);
        color.w = output_Stage1.w;
        color.xyz *= color.w;
        output_Stage2 = color;
    }
    {
        sk_FragColor = output_Stage2;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uCoordTransformMatrix_0_Stage0;
in vec2 position;
in vec4 color;
in vec2 localCoord;
noperspective out vec2 vTransformedCoords_0_Stage0;
flat out vec4 vcolor_Stage0;
void main() {
    vTransformedCoords_0_Stage0 = (uCoordTransformMatrix_0_Stage0 * vec3(localCoord, 1.0)).xy;
    vcolor_Stage0 = color;
    gl_Position = vec4(position.x, position.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

