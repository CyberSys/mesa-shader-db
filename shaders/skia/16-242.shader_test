[require]
GLSL >= 1.40

[fragment shader]
#version 140

#extension GL_ARB_fragment_coord_conventions : require
layout(origin_upper_left) in vec4 gl_FragCoord;
out vec4 sk_FragColor;
uniform vec4 urectUniform_Stage2_c0_c0;
uniform sampler2D uTextureSampler_0_Stage1;
noperspective in vec2 vTransformedCoords_0_Stage0;
noperspective in vec2 vTransformedCoords_1_Stage0;
vec4 AARectEffect_Stage2_c0_c0(vec4 _input, vec2 _coords) {
    vec4 _output;
    float alpha;
    {
        float xSub, ySub;
        xSub = min(gl_FragCoord.x - urectUniform_Stage2_c0_c0.x, 0.0);
        xSub += min(urectUniform_Stage2_c0_c0.z - gl_FragCoord.x, 0.0);
        ySub = min(gl_FragCoord.y - urectUniform_Stage2_c0_c0.y, 0.0);
        ySub += min(urectUniform_Stage2_c0_c0.w - gl_FragCoord.y, 0.0);
        alpha = (1.0 + max(xSub, -1.0)) * (1.0 + max(ySub, -1.0));
    }
    {
        alpha = 1.0 - alpha;
    }
    _output = _input * alpha;
    return _output;
}
void main() {
    vec4 output_Stage1;
    {
        output_Stage1 = texture(uTextureSampler_0_Stage1, vTransformedCoords_0_Stage0);
    }
    vec4 output_Stage2;
    {
        float coord = vTransformedCoords_1_Stage0.x - 0.5;
        float f = fract(coord);
        coord += 0.5 - f;
        float f2 = f * f;
        vec4 w = mat4(0.055555555555555552, 0.88888888888888884, 0.055555555555555552, 0.0, -0.5, 0.0, 0.5, 0.0, 0.83333333333333337, -2.0, 1.5, -0.33333333333333331, -0.3888888888888889, 1.1666666666666667, -1.1666666666666667, 0.3888888888888889) * vec4(1.0, f, f2, f2 * f);
        vec4 c[4];
        c[0] = AARectEffect_Stage2_c0_c0(vec4(1.0), vec2(coord + -1.0, vTransformedCoords_1_Stage0.y));
        c[1] = AARectEffect_Stage2_c0_c0(vec4(1.0), vec2(coord, vTransformedCoords_1_Stage0.y));
        c[2] = AARectEffect_Stage2_c0_c0(vec4(1.0), vec2(coord + 1.0, vTransformedCoords_1_Stage0.y));
        c[3] = AARectEffect_Stage2_c0_c0(vec4(1.0), vec2(coord + 2.0, vTransformedCoords_1_Stage0.y));
        vec4 bicubicColor = ((c[0] * w.x + c[1] * w.y) + c[2] * w.z) + c[3] * w.w;
        bicubicColor = clamp(bicubicColor, 0.0, 1.0);
        output_Stage2 = bicubicColor * output_Stage1;
    }
    {
        sk_FragColor = output_Stage2;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uCoordTransformMatrix_0_Stage0;
uniform mat3 uCoordTransformMatrix_1_Stage0;
in vec2 position;
in vec2 localCoord;
noperspective out vec2 vTransformedCoords_0_Stage0;
noperspective out vec2 vTransformedCoords_1_Stage0;
void main() {
    vTransformedCoords_0_Stage0 = (uCoordTransformMatrix_0_Stage0 * vec3(localCoord, 1.0)).xy;
    vTransformedCoords_1_Stage0 = (uCoordTransformMatrix_1_Stage0 * vec3(localCoord, 1.0)).xy;
    gl_Position = vec4(position.x, position.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

