[require]
GLSL >= 1.40

[fragment shader]
#version 140

#extension GL_ARB_fragment_coord_conventions : require
layout(origin_upper_left) in vec4 gl_FragCoord;
out vec4 sk_FragColor;
uniform vec4 uscale0_1_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec4 uscale2_3_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec4 uscale4_5_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec4 ubias0_1_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec4 ubias2_3_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec4 ubias4_5_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec4 uthresholds1_7_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec4 uthresholds9_13_Stage1_c0_c0_c0_c0_c1_c0;
uniform vec2 uDstTextureUpperLeft_Stage2;
uniform vec2 uDstTextureCoordScale_Stage2;
uniform sampler2D uDstTextureSampler_Stage2;
noperspective in vec4 vcolor_Stage0;
noperspective in vec2 vTransformedCoords_0_Stage0;
noperspective in float vinCoverage_Stage0;
vec4 RadialGradientLayout_Stage1_c0_c0_c0_c0_c0_c0(vec4 _input) {
    vec4 _output;
    float t = length(vTransformedCoords_0_Stage0);
    _output = vec4(t, 1.0, 0.0, 0.0);
    return _output;
}
vec4 UnrolledBinaryGradientColorizer_Stage1_c0_c0_c0_c0_c1_c0(vec4 _input) {
    vec4 _output;
    float t = _input.x;
    vec4 scale, bias;
    {
        if (t < uthresholds1_7_Stage1_c0_c0_c0_c0_c1_c0.y) {
            if (t < uthresholds1_7_Stage1_c0_c0_c0_c0_c1_c0.x) {
                scale = uscale0_1_Stage1_c0_c0_c0_c0_c1_c0;
                bias = ubias0_1_Stage1_c0_c0_c0_c0_c1_c0;
            } else {
                scale = uscale2_3_Stage1_c0_c0_c0_c0_c1_c0;
                bias = ubias2_3_Stage1_c0_c0_c0_c0_c1_c0;
            }
        } else {
            {
                scale = uscale4_5_Stage1_c0_c0_c0_c0_c1_c0;
                bias = ubias4_5_Stage1_c0_c0_c0_c0_c1_c0;
            }
        }
    }
    _output = t * scale + bias;
    return _output;
}
vec4 TiledGradientEffect_Stage1_c0_c0_c0_c0(vec4 _input) {
    vec4 _output;
    vec4 t = RadialGradientLayout_Stage1_c0_c0_c0_c0_c0_c0(vec4(1.0));
    {
        {
            t.x = fract(t.x);
        }
        _output = UnrolledBinaryGradientColorizer_Stage1_c0_c0_c0_c0_c1_c0(t);
    }
    {
        _output.xyz *= _output.w;
    }
    return _output;
}
vec4 blend_src_in(vec4 src, vec4 dst) {
    return src * dst.w;
}
vec4 blend_dst_in(vec4 src, vec4 dst) {
    return blend_src_in(dst, src);
}
vec4 ComposeOne_Stage1_c0_c0(vec4 _input) {
    vec4 _output;
    _output = blend_dst_in(_input, TiledGradientEffect_Stage1_c0_c0_c0_c0(vec4(1.0)));
    return _output;
}
vec4 blend_src(vec4 src, vec4 dst) {
    return src;
}
void main() {
    vec4 outputCoverage_Stage0;
    {
        float alpha = 1.0;
        alpha = vinCoverage_Stage0;
        outputCoverage_Stage0 = vec4(alpha);
    }
    vec4 output_Stage1;
    {
        output_Stage1 = ComposeOne_Stage1_c0_c0(vec4(1.0));
    }
    {
        if (all(lessThanEqual(outputCoverage_Stage0.xyz, vec3(0.0)))) {
            discard;
        }
        vec2 _dstTexCoord = (gl_FragCoord.xy - uDstTextureUpperLeft_Stage2) * uDstTextureCoordScale_Stage2;
        _dstTexCoord.y = 1.0 - _dstTexCoord.y;
        vec4 _dstColor = texture(uDstTextureSampler_Stage2, _dstTexCoord);
        sk_FragColor = blend_src(output_Stage1, _dstColor);
        sk_FragColor = outputCoverage_Stage0 * sk_FragColor + (vec4(1.0) - outputCoverage_Stage0) * _dstColor;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uCoordTransformMatrix_0_Stage0;
in vec2 inPosition;
in vec4 inColor;
in float inCoverage;
noperspective out vec4 vcolor_Stage0;
noperspective out vec2 vTransformedCoords_0_Stage0;
noperspective out float vinCoverage_Stage0;
void main() {
    vec4 color = inColor;
    vcolor_Stage0 = color;
    vec2 pos2 = inPosition;
    vTransformedCoords_0_Stage0 = (uCoordTransformMatrix_0_Stage0 * vec3(inPosition, 1.0)).xy;
    vinCoverage_Stage0 = inCoverage;
    gl_Position = vec4(pos2.x, pos2.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

