[require]
GLSL >= 1.40

[fragment shader]
#version 140

out vec4 sk_FragColor;
uniform vec4 ucolor_Stage2_c0_c0;
uniform mat4 um_Stage2_c1_c0;
uniform vec4 uv_Stage2_c1_c0;
uniform sampler2D uTextureSampler_0_Stage1;
noperspective in vec2 vTransformedCoords_0_Stage0;
vec4 ConstColorProcessor_Stage2_c0_c0(vec4 _input) {
    vec4 _output;
    {
        _output = ucolor_Stage2_c0_c0;
    }
    return _output;
}
vec4 ColorMatrixFragmentProcessor_Stage2_c1_c0(vec4 _input) {
    vec4 _output;
    vec4 inputColor = _input;
    _output = um_Stage2_c1_c0 * inputColor + uv_Stage2_c1_c0;
    {
        _output = clamp(_output, 0.0, 1.0);
    }
    return _output;
}
vec4 blend_src_out(vec4 src, vec4 dst) {
    return (1.0 - dst.w) * src;
}
void main() {
    vec4 output_Stage1;
    {
        output_Stage1 = texture(uTextureSampler_0_Stage1, vTransformedCoords_0_Stage0);
    }
    vec4 output_Stage2;
    {
        vec4 inputColor = vec4(output_Stage1.xyz, 1.0);
        output_Stage2 = blend_src_out(ConstColorProcessor_Stage2_c0_c0(inputColor), ColorMatrixFragmentProcessor_Stage2_c1_c0(inputColor));
        output_Stage2 *= output_Stage1.w;
    }
    {
        sk_FragColor = output_Stage2;
    }
}

[vertex shader]
#version 140

uniform vec4 sk_RTAdjust;
uniform mat3 uCoordTransformMatrix_0_Stage0;
in vec2 position;
in vec2 localCoord;
noperspective out vec2 vTransformedCoords_0_Stage0;
void main() {
    vTransformedCoords_0_Stage0 = (uCoordTransformMatrix_0_Stage0 * vec3(localCoord, 1.0)).xy;
    gl_Position = vec4(position.x, position.y, 0.0, 1.0);
    gl_Position = vec4(gl_Position.xy * sk_RTAdjust.xz + gl_Position.ww * sk_RTAdjust.yw, 0.0, gl_Position.w);
}

