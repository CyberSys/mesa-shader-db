[require]
GLSL >= 1.10

[vertex shader]
#version 120
#extension GL_ARB_texture_rectangle : enable
#define flat
#define texture2DRectOffset(sampler, coords, offset) texture2DRect(sampler, coords + vec2(offset))
#define shadow2DRectOffset(sampler, coords, offset) shadow2DRect(sampler, coords + vec2(offset))
attribute vec4 vvertex;
        attribute vec3 vnormal;
        attribute vec2 vtexcoord0;
        uniform mat4 camprojmatrix;
        uniform vec2 texgenscroll;
        varying vec3 nvec;
        
        
            varying vec2 texcoord0;
        
        
        
        

        void main(void)
        {
            gl_Position = camprojmatrix * vvertex;
            
                texcoord0 = vtexcoord0 + texgenscroll;
            
            
            nvec = vnormal;

            

            

            
        }
    
[fragment shader]
#version 120
#extension GL_ARB_texture_rectangle : enable
#define flat
#define texture2DRectOffset(sampler, coords, offset) texture2DRect(sampler, coords + vec2(offset))
#define shadow2DRectOffset(sampler, coords, offset) shadow2DRect(sampler, coords + vec2(offset))
#define fragdata(loc, name, type)
#define gcolor gl_FragData[0]
#define gnormal gl_FragData[1]
#define gglow gl_FragData[2]
uniform vec4 colorparams;
        uniform sampler2D diffusemap;
        
        varying vec3 nvec;
        
        fragdata(0, gcolor, vec4)
        fragdata(1, gnormal, vec4)
        fragdata(2, gglow, vec4)
        
        
    
        
            varying vec2 texcoord0;
        
        
        
        
        

        void main(void)
        {
            vec3 normal = normalize(nvec);

            
                vec4 diffuse = texture2D(diffusemap, texcoord0);   
            

            gcolor.rgb = diffuse.rgb*colorparams.rgb;
            
                gcolor.a = 0.0;
            

            

            
                gglow.rgb = vec3(0.0);
            

            
                    #define packnorm colorparams.a
                

            
        gnormal.rgb = normal*0.5 + 0.5;
        #ifdef packnorm
            gnormal.a = (packnorm);
        #else
            gnormal.a = 1.0;
        #endif
    

            
        
        
    

            
        }
    
