[require]
GLSL >= 1.10

[vertex shader]
#version 120
#extension GL_ARB_texture_rectangle : enable
#define flat
#define texture2DRectOffset(sampler, coords, offset) texture2DRect(sampler, coords + vec2(offset))
#define shadow2DRectOffset(sampler, coords, offset) shadow2DRect(sampler, coords + vec2(offset))
attribute vec4 vvertex;
    attribute vec3 vtexcoord0;
    varying vec3 texcoord0;
    void main(void)
    {
        gl_Position = vvertex;
        texcoord0 = vtexcoord0;
    }

[fragment shader]
#version 120
#extension GL_ARB_texture_rectangle : enable
#define flat
#define texture2DRectOffset(sampler, coords, offset) texture2DRect(sampler, coords + vec2(offset))
#define shadow2DRectOffset(sampler, coords, offset) shadow2DRect(sampler, coords + vec2(offset))
#define fragdata(loc, name, type)
#define rhr gl_FragData[0]
#define rhg gl_FragData[1]
#define rhb gl_FragData[2]
#define rha gl_FragData[3]
uniform sampler3D tex7, tex8, tex9, tex10;
    varying vec3 texcoord0;
    fragdata(0, rhr, vec4)
    fragdata(1, rhg, vec4)
    fragdata(2, rhb, vec4)
    fragdata(3, rha, vec4)

    void main(void)
    {
        rhr = texture3D(tex7, texcoord0);
        rhg = texture3D(tex8, texcoord0);
        rhb = texture3D(tex9, texcoord0);
        rha = texture3D(tex10, texcoord0);
    }

