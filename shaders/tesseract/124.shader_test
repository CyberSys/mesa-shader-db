[require]
GLSL >= 1.10

[vertex shader]
#version 120
#extension GL_ARB_texture_rectangle : enable
#define flat
#define texture2DRectOffset(sampler, coords, offset) texture2DRect(sampler, coords + vec2(offset))
#define shadow2DRectOffset(sampler, coords, offset) shadow2DRect(sampler, coords + vec2(offset))
attribute vec4 vvertex;
    attribute vec2 vtexcoord0;
    varying vec2 texcoord0;
    void main(void)
    {
        gl_Position = vvertex;
        texcoord0 = vtexcoord0; 
    }

[fragment shader]
#version 120
#extension GL_ARB_texture_rectangle : enable
#define flat
#define texture2DRectOffset(sampler, coords, offset) texture2DRect(sampler, coords + vec2(offset))
#define shadow2DRectOffset(sampler, coords, offset) shadow2DRect(sampler, coords + vec2(offset))
#define fragdata(loc, name, type)
#define fragcolor gl_FragData[0]
uniform sampler2DRect tex0; 
    uniform vec2 hdrgamma;
    varying vec2 texcoord0;
    fragdata(0, fragcolor, vec4)
    void main(void)
    {
        vec3 color = texture2DRect(tex0, texcoord0).rgb*2.0;
        
        color *= color;
    
        float lum = dot(color, vec3(0.2126, 0.7152, 0.0722));
        float loglum = sqrt(clamp(lum, 0.015625, 4.0)) * (1.0/2.0); 
        fragcolor.rgb = vec3(loglum);
    }

