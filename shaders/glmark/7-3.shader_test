[require]
GLSL ES >= 1.00

[vertex shader]
const vec4 MaterialDiffuse = vec4(0.300000, 0.300000, 0.300000, 1.000000);
attribute vec2 position;

uniform mat4 LightMatrix;
uniform mat4 ModelViewProjectionMatrix;

varying vec4 ShadowCoord;
varying vec4 Color;

void main()
{
    Color = MaterialDiffuse;

    vec4 pos4 = vec4(position, 0.0, 1.0);
    ShadowCoord = LightMatrix * pos4;
    gl_Position = ModelViewProjectionMatrix * pos4;
}

[fragment shader]
#ifdef GL_ES
precision mediump float;
#endif
uniform sampler2D ShadowMap;

varying vec4 Color;
varying vec4 ShadowCoord;

void main()
{
    vec4 sc_perspective = ShadowCoord / ShadowCoord.w;
    sc_perspective.z += 0.1505;
    vec4 shadow_value = texture2D(ShadowMap, sc_perspective.st);
    float light_distance = shadow_value.z;
    float shadow = 1.0;
    if (ShadowCoord.w > 0.0 && light_distance < sc_perspective.z) {
        shadow = 0.5;
    }
    gl_FragColor = vec4(shadow * Color.rgb, 1.0);
}

